<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100001</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>slotNum = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var item = global.inventory[slot];
select = keyboard_check(ord('E')) || gamepad_button_check_pressed(0, gp_face1);
left = keyboard_check_pressed('&lt;') || gamepad_button_check_pressed(0, gp_shoulderl);
right = keyboard_check_pressed('&gt;') || gamepad_button_check_pressed(0, gp_shoulderr);
var click = mouse_check_button_pressed(mb_left);
if (left) {
    slotNum--;
}
if (right) {
    slotNum++;
}
if (slotNum &lt; 0) {
    slotNum = maxItems;
}
if (slotNum &gt; maxItems) {
    slotNum = 0;
}

var x1, x2, y1, y2;
    x1 = view_xview[0];
    x2 = x1 + view_wview[0]/3;
    y1 = view_yview[0] + 656;
    y2 = y1 + 64;
    
    for (i = 0; i &lt; maxItems; i++) {
        var ix = x1 + 32 + (i * 48);
        var iy = y2 - 48;
        
        
}

/*
if (abs(mouse_x - (x - 16) &gt; 16) &amp;&amp; abs(mouse_y - (y - 16) &gt; 16)) {
    draw_set_colour(c_white);
    draw_rectangle(x, y, x+32, y+32, 1);
    if (click) {
        if (item != -1) {
            scr_itemdrop_slot(slot);
        }
        if (mouseItem != -1) {
            scr_itempickup_slot(mouseItem, slot)
        }
        mouseItem = item;
    }
}
*/

if (item != -1) {
    draw_sprite(spr_items, item, x, y);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
